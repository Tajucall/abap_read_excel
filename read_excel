mo_data_ref  TYPE REF TO data.

    DATA:
      lt_records       TYPE solix_tab,
      lv_headerxstring TYPE xstring,
      lv_filelength    TYPE i.

    CHECK ms_input-file_pc = 'X'.

    CALL FUNCTION 'GUI_UPLOAD'
      EXPORTING
        filename                = ms_input-file_path
        filetype                = 'BIN'
      IMPORTING
        filelength              = lv_filelength
        header                  = lv_headerxstring
      TABLES
        data_tab                = lt_records
      EXCEPTIONS
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        bad_data_format         = 8
        header_not_allowed      = 9
        separator_not_allowed   = 10
        header_too_long         = 11
        unknown_dp_error        = 12
        access_denied           = 13
        dp_out_of_memory        = 14
        disk_full               = 15
        dp_timeout              = 16
        OTHERS                  = 17.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 RAISING ex_failed.
    ENDIF.

    CALL FUNCTION 'SCMS_BINARY_TO_XSTRING'
      EXPORTING
        input_length = lv_filelength
      IMPORTING
        buffer       = lv_headerxstring
      TABLES
        binary_tab   = lt_records
      EXCEPTIONS
        failed       = 1
        OTHERS       = 2.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 RAISING ex_failed.
    ENDIF.

    TRY .
        DATA(lo_excel_ref) = NEW cl_fdt_xl_spreadsheet(
                                         document_name = ms_input-file_path
                                         xdocument     = lv_headerxstring ) .

      CATCH cx_fdt_excel_core INTO DATA(lo_exc).
        DATA(lv_msg) = lo_exc->get_longtext( ).
        IF lv_msg IS INITIAL.
          lv_msg = lo_exc->get_text( ).
        ENDIF.

        MESSAGE e398(00) WITH lv_msg RAISING ex_failed.

    ENDTRY .

    "Get List of Worksheets
    lo_excel_ref->if_fdt_doc_spreadsheet~get_worksheet_names(
      IMPORTING
        worksheet_names = DATA(lt_worksheets) ).

    IF NOT lt_worksheets IS INITIAL.
      READ TABLE lt_worksheets INTO DATA(lv_woksheetname) INDEX 1.
      CHECK sy-subrc = 0.

      mo_data_ref = lo_excel_ref->if_fdt_doc_spreadsheet~get_itab_from_worksheet( lv_woksheetname ).
    ENDIF.
